It looks like you need help with your Rust lab exercises. Hereâ€™s a properly formatted and corrected version of your code:

---

### **Ex01: Declare Variables and Print Their Values**
```rust
fn main() {
    let integer: i32 = 42; // Integer
    let float: f64 = 3.14; // Floating-point
    let boolean: bool = true; // Boolean
    let character: char = 'R'; // Character

    println!("Integer: {}", integer);
    println!("Float: {}", float);
    println!("Boolean: {}", boolean);
    println!("Character: {}", character);
}
```

---

### **Ex02: Simple Arithmetic Operations**
```rust
fn main() {
    let a: i32 = 15;
    let b: i32 = 4;

    println!("Addition: {}", a + b);
    println!("Subtraction: {}", a - b);
    println!("Multiplication: {}", a * b);
    println!("Division: {}", a / b);
    println!("Modulo: {}", a % b);
}
```

---

### **Ex03: If-Else Decision Making**
```rust
use std::io;

fn main() {
    let mut input = String::new();
    println!("Enter a number:");
    io::stdin().read_line(&mut input).expect("Failed to read input");
    
    let number: i32 = input.trim().parse().expect("Please enter a valid integer");

    if number > 0 {
        println!("The number is Positive.");
    } else if number < 0 {
        println!("The number is Negative.");
    } else {
        println!("The number is Zero.");
    }
}
```

---

### **Ex04: Checking for Even or Odd**
```rust
use std::io;

fn main() {
    let mut input = String::new();
    println!("Enter an integer:");
    io::stdin().read_line(&mut input).expect("Failed to read input");
    
    let number: i32 = input.trim().parse().expect("Please enter a valid integer");

    if number % 2 == 0 {
        println!("Even");
    } else {
        println!("Odd");
    }
}
```

---

### **Ex05: Using a Loop to Print Even Numbers**
```rust
fn main() {
    for number in 1..=20 {
        if number % 2 == 0 {
            println!("{}", number);
        }
    }
}
```

---

### **Ex06: While Loop Example**
```rust
fn main() {
    let mut number = 1;

    while number <= 20 {
        if number % 2 != 0 {
            println!("{}", number);
        }
        number += 1;
    }
}
```

---

### **Ex07: Using a For Loop with a Range (Reverse Order)**
```rust
fn main() {
    for number in (1..=10).rev() {
        println!("{}", number);
    }
}
```

---

These versions correct syntax errors, ensure proper formatting, and improve clarity. Let me know if you need any modifications! ğŸš€
