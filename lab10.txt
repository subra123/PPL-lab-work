## Roll number: CH.EN.U4CYS22025

## Name: Pranish K

[6th-sem-labs/PPL at main Â· lvexol/6th-sem-labs](https://github.com/lvexol/6th-sem-labs/tree/main/PPL)

---

## Objective

The objective of this lab exercise is to learn how to **implement a custom iterator** in Rust by defining a struct (`EvenNumbers`), implementing the **Iterator** trait, and using the **next()** method to generate even numbers. You will also practice using this iterator to print the first **10 even numbers** in the `main()` function.

---

## Code

### Define a Custom Iterator for Even Numbers

```rust
// Define a custom iterator for even numbers
struct EvenNumbers {
    current: u32,
    limit: u32,
}

// Implement the Iterator trait for EvenNumbers
impl Iterator for EvenNumbers {
    type Item = u32;

    fn next(&mut self) -> Option<Self::Item> {
        if self.current > self.limit {
            return None; // Stop when the limit is reached
        }

        let next_even = self.current;
        self.current += 2; // Move to the next even number

        Some(next_even)
    }
}

// Function to create a new EvenNumbers iterator
fn even_numbers(limit: u32) -> EvenNumbers {
    EvenNumbers { current: 2, limit }
}

fn main() {
    println!("First 10 even numbers:");

    // Create an EvenNumbers iterator up to 20
    let even_iter = even_numbers(20);

    // Print the first 10 even numbers
    for num in even_iter.take(10) {
        println!("{}", num);
    }
}
```

---

## Output

```
First 10 even numbers:
2
4
6
8
10
12
14
16
18
20
```


